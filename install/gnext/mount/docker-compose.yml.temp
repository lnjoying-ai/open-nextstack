version: "3"
services:
  alertmanager:
    image: swr.cn-north-4.myhuaweicloud.com/lnjoying/alertmanager:latest
    container_name: altermanager
    hostname: altermanager
    restart: always
    volumes:
      - ./alertmanager/data:/alertmanager/data
      - ./alertmanager/config:/config
    command:
      - '--config.file=/config/alertmanager.yml'
    
    network_mode: host
  prometheus:
    image: swr.cn-north-4.myhuaweicloud.com/lnjoying/prometheus:latest
    restart: always
    volumes:
      - ./prometheus/:/etc/prometheus/:rw
      - ./prometheus/data:/prometheus:rw
      - ./justice/rules:/etc/rules:rw  
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.listen-address=:9090'
      - '--web.enable-lifecycle'  
    network_mode: host

  grafana:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/grafana:v9.3.2.rc1
    depends_on:
      - prometheus
    restart: always
    network_mode: host
    volumes:
      - ./grafana/data:/var/lib/grafana:rw
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:rw
      - ./grafana/provisioning:/etc/grafana/provisioning:rw
    environment:
      - TZ=Asia/Shanghai
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=lnjoying
      - GF_SECURITY_ADMIN_PASSWORD=lnjoying

  redis:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/redis:6.2.3
    container_name: lnjoying-redis
    restart: always
    ports:
     - "6379:6379"
    command: redis-server --requirepass hello123!@# 
    networks:
      - lnjoying-bridge
  postgres:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/postgres:13.3
    container_name: lnjoying-postgres
    restart: always
    ports:
     - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "abcabc123!@#"
      POSTGRES_DB: "justicedb"
    volumes:
      - ./postgre/init:/docker-entrypoint-initdb.d/
      - ./data:/var/lib/postgresql/data
    networks:
      - lnjoying-bridge
  nginx:
          #image: nginx:latest
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/openresty:v1.0.3
    container_name: lnjoying-nginx
    restart: always
    network_mode: "host"
    volumes:
      - ./nginx/web:/root/web
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf      
      - ./openresty/attach_iso.lua:/usr/local/openresty/lualib/resty/attach_iso.lua
      - ./openresty/get_vnc_id.lua:/usr/local/openresty/lualib/resty/get_vnc_id.lua
        #    - ./openresty/lnjoying.com.crt:/root/lnjoying.com.crt  
        #- ./openresty/lnjoying.com.key:/root/lnjoying.com.key
  servicecomb:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/service-center:latest
    container_name: lnjoying-servicecomb
    restart: always
    ports:
      - "30100:30100"
      - "2380:2380"      
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "50m"
  servicecomb-frontend:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/scfrontend:v1
    container_name: lnjoying-servicecomb-frontend
    restart: always
    environment:
      SC_ADDRESS: need_update_ip:30100
    ports:
      - "30103:30103"
    networks:
      - lnjoying-bridge
    logging:
      driver: json-file       
  lnjoying_cloud:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/open-nextstack:v1.0
    container_name: lnjoying-cloud
    restart: always
    network_mode: "host"
    volumes:
      - ./justice/config:/root/lnjoying_config
      - ./justice/logs:/root/lnjoying_cloud/logs
      - ./justice/out:/root/lnjoying_cloud/out
      - ./justice/rules:/etc/rules:rw  
    depends_on:
      - grafana
      - redis
      - postgres
      - nginx
      - servicecomb
  openresty:
    image: swr.cn-north-1.myhuaweicloud.com/lnjoying/openresty:v1.0.3
    container_name: lnjoying-openresty
    restart: always
    network_mode: "host"      
    volumes:
      - ./openresty/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf      
      - ./openresty/lnjoying.com.crt:/root/lnjoying.com.crt  
      - ./openresty/lnjoying.com.key:/root/lnjoying.com.key
      - ./openresty/dist:/root/dist  
      - ./openresty/attach_iso.lua:/usr/local/openresty/lualib/resty/attach_iso.lua
      - ./openresty/get_vnc_id.lua:/usr/local/openresty/lualib/resty/get_vnc_id.lua
      - ./openresty/monitor.lua:/usr/local/openresty/lualib/resty/monitor.lua

    depends_on:
      - lnjoying_cloud      
    logging:
      driver: json-file       

networks:
  lnjoying-bridge:
    driver: bridge
