user root;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /usr/local/openresty/nginx/logs/access.log;
        error_log  /usr/local/openresty/nginx/logs/error.log debug;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        #include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
	init_by_lua_block {
		cjson = require "cjson";
		http = require "resty.http";
	}
    	map $http_upgrade $connection_upgrade {
    		default upgrade;
    		'' close;
	}


        server {
            listen 9085 ssl;
            #listen 80;
            #server_name dev.lnjoying.io;

	    #ssl_certificate /root/dev.lnjoying.io_bundle.pem;
	    #ssl_certificate_key /root/dev.lnjoying.io.key;
	    ssl_certificate /root/lnjoying.com.crt;
	    ssl_certificate_key /root/lnjoying.com.key;
	    ssl_session_timeout 5m;
            location / {
		root /root/dist;
                access_log on;
                autoindex  on;
		index index.html;
		try_files $uri $uri/ /index.html;
            }

            location ~ /dashboard/clouds {
		root /root/dist/dashboard/clouds;
		#root /root/cloud
                access_log on;
                autoindex  on;
		index index.html;
		try_files $uri $uri/ /index.html;
            }

	   
#   	    location ~ /api/vnc/(.*) {
#	        set $backend '';
#		set $id  $1;
#		#set $user_agent $http_user_agent;
#                #set $manager_url 'http://192.168.8.240:9080/api/compute/v1/vms/instances/';
#                set $manager_url 'http://127.0.0.1:8055/api/vm/v1/instances/';
# 		rewrite_by_lua_file /usr/local/openresty/lualib/resty/get_vnc_id.lua;
#                proxy_pass $backend;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_http_version 1.1;
#        	proxy_set_header Upgrade $http_upgrade;
#        	proxy_set_header Connection $connection_upgrade;
#		
#	    }	

	    location  /api/monitor/vm {
               # set $backend '';
                set $monitor_url 'http://127.0.0.1:8055/api/vm/v1/monitor/has_permission';
                set $monitor_agent_server 'need_update_ip:3000';
                rewrite_by_lua_file /usr/local/openresty/lualib/resty/monitor.lua;
              #  proxy_pass $backend;

                rewrite ^/api/monitor/vm/(.*) /$1 break;
                proxy_pass http://need_update_ip:3000;
	#	proxy_redirect http:// https://;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location /api/monitor/vm/public/ {
                rewrite ^/api/monitor/vm/(.*) /$1 break;
                proxy_pass http://need_update_ip:3000;
	#	proxy_redirect http:// https://;
                proxy_http_version 1.1;
                proxy_set_header Host $http_host;

            }

            #location /api/monitor/vm/api/dashboards/uid/{
            location /api/monitor/vm/api/{
                rewrite ^/api/monitor/vm/(.*) /$1 break;
                proxy_pass http://need_update_ip:3000;
	#	proxy_redirect http:// https://;
                proxy_http_version 1.1;
                proxy_set_header Host $http_host;
            }

            error_page 401 = /index.html;

        }
}
